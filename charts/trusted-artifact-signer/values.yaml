global:
  # -- DNS name to generate environment variables and consoleCLIDownload urls.
  # By default, in OpenShift, the value for this is
  # apps.$(oc get dns cluster -o jsonpath='{ .spec.baseDomain }')
  appsSubdomain: ""

configs:
  segment_backup_job:
    enabled: false
    namespace_create: false
    image:
      registry: quay.io
      repository: redhat-user-workloads/rhtas-tenant/segment-backup-job/segment-backup-job
      version: "sha256:89cadb0759653c1e2d9e0b1ecc540eace323f23cff4d1e964ec49333e51eced7"
      pullPolicy: IfNotPresent
    rolebindings:
      - segment-backup-job
    name: segment-backup-job
    namespace: trusted-artifact-signer-monitoring
  clientserver:
    # -- Whether to create the OpenShift resource 'ConsoleCLIDownload' for each binary.
    # -- This can only be enabled if the OpenShift CRD is registered.
    consoleDownload: true
    # -- Whether to create the OpenShift route resource
    route: true
    name: tas-clients
    namespace_create: true
    namespace: trusted-artifact-signer-clientserver
    rolebindings:
      - tas-clients
    images:
      httpd:
        registry: registry.redhat.io
        repository: ubi9/httpd-24
        version: "sha256:7874b82335a80269dcf99e5983c2330876f5fe8bdc33dc6aa4374958a2ffaaee"
        pullPolicy: IfNotPresent
      clientserver_cg:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/cli/client-server-cg
        version: "sha256:eb49058e7b12a2f48e363c09ef438aeb8500e83a4fb91451197f6bc2fe2e61de"
        pullPolicy: IfNotPresent
      clientserver_re:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/cli/client-server-re
        version: "sha256:dd05e0575f1ee94ffe8a299a3baf5af1a5b77299f4f356daf7826d6e4814cd3d"
        pullPolicy: IfNotPresent

  rekorui:
    enabled: true
    route: true
    name: rekor-ui
    namespace_create: true
    namespace: rekor-ui
    image:
      registry: quay.io
      repository: redhat-user-workloads/rhtas-tenant/rekor-search-ui/rekor-search-ui
      version: "sha256:1a8c0448c294e33a3ec6d11f45e886d3ad606b221ed81d114f6d91257a968209"
      imagePullPolicy: Always
    subdomain: rekorui.appsSubdomain
  ctlog:
    namespace: ctlog-system
    namespace_create: true
    # -- Names for rolebindings to add clusterroles to ctlog serviceaccounts.
    # The names must match the serviceaccount names in the ctlog namespace.
    rolebindings:
      - ctlog
      - ctlog-createtree
      - trusted-artifact-signer-ctlog-createctconfig

  rekor:
    namespace_create: true
    namespace: rekor-system
    # -- names for rolebindings to add clusterroles to rekor serviceaccounts.
    # The names must match the serviceaccount names in the rekor namespace.
    rolebindings:
      - rekor-redis
      - rekor-server
      - trusted-artifact-signer-rekor-createtree
    # -- Signer holds secret that contains the private key used to sign entries and the tree head of the transparency log
    # When this section is left out, scaffold.rekor creates the secret and key.
    signer:
      secret:
        # -- Name of the secret to create with the private key data. This name must match the value in
        # scaffold.rekor.server.signer.signerFileSecretOptions.secretName.
        name: ""
        # -- Private encrypted signing key
        private_key: ""
        # -- File containing a private encrypted signing key
        private_key_file: ""
    #  -- With ClusterMonitoring enabled, a ServiceMonitor and RBAC is created. This adds a  metrics target from rekor-server
    #  in the openshift-monitoring namespace scraped by prometheus along with other cluster-monitoring targets.
    clusterMonitoring:
      enabled: true
      endpoints:
        - interval: 30s
          port: 2112-tcp
          scheme: http
    backfillRedis:
      enabled: true
      schedule: "0 0 * * *"
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/rekor/backfill-redis
        version: "sha256:27a016efec4dca3f029d0b7ac0fc02cbac7bd44051ebd0e2f458f8b5b9fc8972"
        pullPolicy: IfNotPresent


  fulcio:
    namespace_create: true
    namespace: fulcio-system
    # -- Names for rolebindings to add clusterroles to fulcio serviceaccounts.
    # The names must match the serviceaccount names in the fulcio namespace.
    rolebindings:
      - fulcio-createcerts
      - fulcio-server
    server:
      #  -- Secret to create with fulcio signing backend certificate and keys.
      #  Leave this section out if a secret already exists in the fulcio namespace.
      #  The secret.name must match the value of scaffold.fulcio.server.secret and
      #  also tuf.secrets.fulcio.name. For details on certificate and key requirements,
      #  see https://github.com/sigstore/fulcio/blob/main/docs/setup.md#ca-certificate-requirements
      secret:
        name: ""
        # -- password to decrypt the signing key
        password: ""
        # -- signer public key
        public_key: ""
        # -- a PEM-encoded encrypted signing key
        private_key: ""
        # -- file containing signer public key
        public_key_file: ""
        # -- file containing a PEM-encoded encrypted signing key
        private_key_file: ""
        # -- fulcio root certificate authority (CA)
        root_cert: ""
        # -- file containing fulcio root certificate authority (CA)
        root_cert_file: ""
    #  -- With ClusterMonitoring enabled, a ServiceMonitor and RBAC is created. This adds a  metrics target from fulcio-server
    #  in the openshift-monitoring namespace scraped by prometheus along with other cluster-monitoring targets.
    clusterMonitoring:
      enabled: true
      endpoints:
        - interval: 30s
          port: 2112-tcp
          scheme: http

  trillian:
    namespace_create: true
    namespace: trillian-system
    # -- names for rolebindings to add clusterroles to trillian serviceaccounts.
    # The names must match the serviceaccount names in the trillian namespace.
    rolebindings:
      - trillian-logserver
      - trillian-logsigner
      - trillian-mysql

  tuf:
    namespace: tuf-system
    namespace_create: true
    # -- names for rolebindings to add clusterroles to tuf serviceaccounts.
    # The names must match the serviceaccount names in the tuf namespace.
    rolebindings:
      - tuf
      - tuf-secret-copy-job

  cosign_deploy:
    enabled: false
    namespace: cosign
    namespace_create: true
    # -- names for rolebindings to add clusterroles to cosign serviceaccounts.
    # The names must match the serviceaccount names in the cosign namespace.
    rolebindings:
      - cosign
    # -- Name of deployment
    name: cosign
    # -- Image containing the cosign binary as well as environment variables with the base domain injected.
    image:
      registry: quay.io
      repository: redhat-user-workloads/rhtas-tenant/cli/cosign
      version: sha256:7c4586064ec51bcfff45a50d47121907d076231e20f1505a955fe322e4af3b76
      pullPolicy: IfNotPresent

rbac:
  # -- clusterrole to be added to sigstore component serviceaccounts.
  clusterrole: system:openshift:scc:anyuid

# github.com/sigstore/helm-charts/charts
scaffold:
  ctlog:
    enabled: true
    forceNamespace: ctlog-system
    fullnameOverride: ctlog
    namespace:
      create: false
      name: ctlog-system
    server:
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/certificate-transparency-go/certificate-transparency-go
        version: "sha256:1419a048cb5095b3f65d08224e6f94c6eb166d8d5a16707942aed2880992ddee"
        pullPolicy: IfNotPresent
    createctconfig:
      backoffLimit: 30
      enabled: true
      initContainerImage:
        curl:
          registry: registry.access.redhat.com
          repository: ubi9/ubi-minimal
          version: latest
          imagePullPolicy: IfNotPresent
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/scaffold/createctconfig
        version: "sha256:8ae3dce80a5a94bd03cb1c6437f028e36a379e3da5777600afb3b1daab045cf0"
        pullPolicy: IfNotPresent
    createcerts:
      fullnameOverride: ctlog-createcerts
    createtree:
      fullnameOverride: ctlog-createtree
      displayName: ctlog-tree
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/scaffold/trillian-createtree
        version: "sha256:4ab1f1d7ac4f76ab245d60e4be70b74c46eb945335250e6f6b8db55b31bc7458"
        pullPolicy: IfNotPresent
  fulcio:
    enabled: true
    forceNamespace: fulcio-system
    ctlog:
      enabled: false
      createctconfig:
        logPrefix: sigstorescaffolding
    namespace:
      name: fulcio-system
      create: false
    createcerts:
      enabled: false
      fullnameOverride: fulcio-createcerts
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/scaffold/fulcio-createcerts
        version: "sha256:f18fe097108957cec100fb29160c8332720700d61ae04fe52741959558176ebe"
        pullPolicy: IfNotPresent
    server:
      fullnameOverride: fulcio-server
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/fulcio/fulcio-server
        version: "sha256:f333772eb0cd23360516da4a7a50813a59d67c690c2b6baef4bc4b6094d1116b"
        pullPolicy: IfNotPresent
      # If content and/or files not provided in configs.fulcio.secret
      # then this secret must exist in fulcio-system ns. See ../quickstart-with-keycloak.md
      # for how to create this secret.
      secret: fulcio-secret-rh
      ingress:
        http:
          enabled: true
          className: ""
          annotations:
            route.openshift.io/termination: "edge"
          hosts:
          - host: fulcio.appsSubdomain
            path: /

  rekor:
    initContainerImage:
      curl:
        registry: registry.access.redhat.com
        repository: ubi9/ubi-minimal
        version: sha256:06d06f15f7b641a78f2512c8817cbecaa1bf549488e273f5ac27ff1654ed33f0
        imagePullPolicy: IfNotPresent
    enabled: true
    forceNamespace: rekor-system
    fullnameOverride: rekor
    namespace:
      name: rekor-system
      create: false
    trillian:
      enabled: false
    redis:
      fullnameOverride: rekor-redis
      args:
        - /usr/bin/run-redis
        - --bind
        - 0.0.0.0
        - --appendonly
        - "yes"
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/trillian/redis
        version: sha256:0804a6634b8836cb2e957ee16d54e8d6ab94d311362a48baf238b1f575d79934
        pullPolicy: IfNotPresent
    server:
      fullnameOverride: rekor-server
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/rekor/rekor-server
        version: "sha256:a2075576589bec3c4544db4368732cb1388e8f5a3cb2a739d943cee601e64b74"
        pullPolicy: IfNotPresent
      # when providing contents of secret with configs.rekor.signer
      # the signer sections must also be provided here
      signer: /key/private
      signerFileSecretOptions:
        secretName: rekor-private-key
        secretMountPath: /key
        secretMountSubPath: private
        privateKeySecretKey: private
      ingress:
        className: ""
        annotations:
          route.openshift.io/termination: "edge"
        hosts:
          - host: rekor.appsSubdomain
            path: /

    createtree:
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/scaffold/trillian-createtree
        version: "sha256:4ab1f1d7ac4f76ab245d60e4be70b74c46eb945335250e6f6b8db55b31bc7458"
        pullPolicy: IfNotPresent
  trillian:
    enabled: true
    forceNamespace: trillian-system
    fullnameOverride: trillian
    namespace:
      create: false
      name: trillian-system
    createdb:
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/scaffold/trillian-createdb
        version: "sha256:425d1e11d874e65991523af314777710e8c223c675efaa44aeb97b0f9363df8a"
        pullPolicy: IfNotPresent
    initContainerImage:
      netcat:
        registry: registry.redhat.io
        repository: openshift4/ose-tools-rhel8
        version: "sha256:486b4d2dd0d10c5ef0212714c94334e04fe8a3d36cf619881986201a50f123c7"
      curl:
        registry: registry.access.redhat.com
        repository: ubi9/ubi-minimal
        version: latest
        imagePullPolicy: IfNotPresent
    redis:
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/trillian/redis
        version: sha256:0804a6634b8836cb2e957ee16d54e8d6ab94d311362a48baf238b1f575d79934
        pullPolicy: IfNotPresent
      args: []

    logSigner:
      name: trillian-logsigner
      fullnameOverride: trillian-logsigner
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/trillian/logsigner
        version: "sha256:f8199e0b14f391574181a3e38659a2ec5baeb65ba5101ac63b5b9785ae01c214"
        pullPolicy: IfNotPresent
    logServer:
      name: trillian-logserver
      fullnameOverride: trillian-logserver
      portHTTP: 8090
      portRPC: 8091
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/trillian/logserver
        version: "sha256:cdb2fa8ef85a9727c2b306652e4127ee4b2723cd361a04f364f4a96d60194777"
        pullPolicy: IfNotPresent
    mysql:
      fullnameOverride: trillian-mysql
      gcp:
        scaffoldSQLProxy:
          registry: registry.redhat.io
          repository: rhtas-tech-preview/cloudsqlproxy-rhel9
          version: sha256:f6879364d41b2adbe339c6de1dae5d17be575ea274786895448ee4277831cb7f
      image:
        registry: quay.io
        repository: redhat-user-workloads/rhtas-tenant/trillian/database
        version: "sha256:145560da2f030ab6574d62c912b757d5537e75e4ec10e0d26cf56a67b1573969"
        pullPolicy: IfNotPresent
      args: []
      securityContext:
        fsGroup: 0
      livenessProbe:
        exec:
          command:
          - mysqladmin
          - ping
          - -h
          - localhost
          - -u
          - $(MYSQL_USER)
          - -p$(MYSQL_PASSWORD)
      readinessProbe:
        exec:
          command:
          - mysqladmin
          - ping
          - -h
          - localhost
          - -u
          - $(MYSQL_USER)
          - -p$(MYSQL_PASSWORD)
  tuf:
    namespace:
      create: false
      name: tuf-system
    forceNamespace: tuf-system
    fullnameOverride: tuf
    secrets:
      fulcio:
        name: fulcio-secret-rh
        path: fulcio_v1.crt.pem
      rekor:
        name: rekor-public-key
        path: rekor.pub
      ctlog:
        name: ctlog-public-key
        path: ctfe.pub

    enabled: true
    ingress:
      className: ""
      annotations:
        route.openshift.io/termination: "edge"
      http:
        hosts:
          - host: tuf.appsSubdomain
            path: /
    deployment:
      registry: quay.io
      repository: redhat-user-workloads/rhtas-tenant/scaffold/tuf-server
      version: "sha256:b6875d661113f34911075264950a4a507090dddb2c01c313885ea367c113ec08"


  copySecretJob:
    name: copy-secrets-job
    enabled: true
    registry: registry.redhat.io
    repository: openshift4/ose-cli
    version: latest
    imagePullPolicy: IfNotPresent
    serviceaccount: tuf-secret-copy-job
    backoffLimit: 1000

  tsa:
    enabled: false
    forceNamespace: tsa-system
    namespace:
      create: false
      name: tsa-system
    server:
      fullnameOverride: tsa-server
